/*Paleta de colores:
    negro, blanco, amarillo, gris y aqua
*/
:root{/*forma de almacenar variables en css, es un elemento que "no existe"*/
    --blanco:#ffffff;
    --oscuro:#212121;
    --primario: #ffc107;
    --secundario: #0097a7;
    --gris:#757575;
    --grisClaro:#dfe9f3;
    --fuente-principal: 3.8rem; /*  1rem = 20px*/
}
html{
    font-size: 62.5%;
    box-sizing: border-box;
    scroll-snap-type: y mandatory;
}
*, *:before, *:after {
    box-sizing: inherit;
  }
body{
    font-size: 16px;
    font-family:  'Krub', sans-serif;
    background-image:linear-gradient(to top, var(--grisClaro), 40%, var(--blanco) 100%);
}
h1{
    font-size: 3.8rem; 
}
h2{
    font-size: 2.8rem; 
}
h3{
    font-size: 1.8rem; 
}
h1,h2,h3{
    text-align: center;
}
/*Lo que esta en el desde line 1-6 es un hack para utilizar mejor los rem
Para seleccionar existen muchas formas 
1. por clase => .cliente
2. por ID => #cliente
3. por hijos solos=> .cliente .ropa
4. por hijos todos => .cliente >p
5. por atributos => [src="image.jpg"] 
*/
.titulo{ /*ejemplo de especificidad*/
    color: var(--oscuro);
}
.titulo span{
    font-size: 2rem; /*ya no se usan los pixeles, ahora se usan los rem, los rem ajustan el tamanio */
}
/*podemos nomabrar otro elemento con la clase titulo y se 
le aplicaran las propiedades de arriba
ESPECIFICIDAD: es para especificar exactamente una cosa bien especifica aunque comparta la clase
podemos usar la bandera +!important que ayudara a darle toda la importancia
*/
.contenedor{
    max-width: 120rem;
    margin:0 auto;
}
.boton{
background-color: var(--secundario);
color: var(--blanco);
padding: 1rem 3rem;
margin-top: 1rem;
font-size: 2rem;
text-decoration: none;
text-transform: uppercase;
font-weight: bold;
border-radius: .5rem;
text-align: center;
width: 90%;
}
.boton:hover{
    cursor: pointer;
}

@media (min-width: 768px) { 
   .boton{
       width: auto;
   }
}
.sombra{
    -webkit-box-shadow: 0px 6px 5px 1px rgba(0,0,0,0.36);
    -moz-box-shadow: 0px 6px 5px 1px rgba(0,0,0,0.36);
    box-shadow: 0px 6px 5px 1px rgba(0,0,0,0.36);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}
.nav-bg{
    background-color: var(--secundario);
}
.nav-princi{
    display: flex; /*habilita las opciones de decoracion en modo flex*/
    flex-direction: column;/*existe el row y el column cada uno lo alinea a su eje correspondiente*/
    /*Aqui separa los textos de la nav existe space evenly y around*/
}
/*Notas para pantallas: 480px es para tels, 768px es para tablets 1140px es para laptop, 1400 para arriba*/
@media (min-width: 768px) {
   .nav-princi{
       flex-direction:row;
       justify-content: space-between; 
       align-items: center;
   }
}
.nav-princi a {
    display: block;
    text-align: center;
    padding: 1rem;
    color:var(--blanco);
    text-decoration: none;
    font-size: 2rem; /*el 700 es para titulos y el 400 es para p*/
    font-weight: bold; 
}
.nav-princi a:hover{ /*sin espacios*/
    background-color: var(--primario);
    color:var(--oscuro);
}
.hero{
    background-image: url(img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 410px; 
    position: relative; /*el elemnto padre de una cosa siempre tioene que ser relativo para que el hijo sea absoluto*/
    margin-bottom: 2rem;
}
.contenido-hero{
position: absolute;
background-color: rgba(0, 0, 0, .6);
width: 100%; /*width es ancho y height es alto*/
height: 100%;
display: flex;
flex-direction: column;
align-items: center;
justify-content: center;
}
.contenido-hero h2, .contenido-hero p {
    color:var(--blanco);
}
/**scroll snap**/
/*.servicios, .nav-princi, .formulario{
    scroll-snap-align: center;
    scroll-snap-stop: always;
}*/
@media (min-width: 768px) {
    .servicios{
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        column-gap: 1rem;
    }
}
.servicio{
display: flex;
flex-direction: column;
align-items: center;

}
.servicio h3{
color: var(--secundario);
font-weight: normal;
}
.servicio p{
    line-height: 2; /*interlineado*/
    text-align: center;
}
.servicio .iconos{
height: 15rem;
width: 15rem;
background-color: var(--primario);
border-radius: 50%;
display: flex;
justify-content: space-evenly;
align-items: center;
}
/*grid permite definir la la ubicacion y crecimento de tus elementos en 
flexbox solo trabajas en una dimension(row o column), en grid trabajas en 2*/
.formulario{
background-color: var(--gris);
width: min(60rem, 100%);
margin: 0 auto;
padding: 2rem;
border-radius: 1rem;
}
.formulario fieldset{
    border: none;
}
.formulario legend{
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: bold;
    margin-bottom: 2rem;
    color: var(--primario);
}
@media (min-width: 768px) {
    .contenedor-campos{
        display: grid;
        grid-template-columns: repeat(2, 1fr);/**SEPARA DOS ELEMENTOS DEL CONTENEDOR EN HORIZONTAL**/
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }
    .campo:nth-child(3), .campo:nth-child(4){/**Este lo que hace es seleccionar el .campo repetido que sea el numero 3 en orden de cascada**/
        grid-column: 1/3;
    }
}
.campo{
margin-bottom: 1rem;
}
.campo label{
color: var(--blanco);
font-weight: bold;
margin-bottom: .5rem;
display: block;
}
.input-text{
width: 100%;
border: none;
padding: 1.5rem;
border-radius: .5rem;
}
.enviar .boton{
    width: 100%;
}

/**UTILIDADES enfoque por modulos**/
.w-100{
    width:100%;
}
@media (min-width: 768px) {
    .w-100{
width: auto;
    }
}
.flex{
    display: flex;
}
.alinear-derecha{
justify-content: flex-end;
}
.campo textarea{
    height: 18rem;
}
.footer{
    text-align: center;
}